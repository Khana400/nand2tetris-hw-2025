// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
    IN  
        x[16], y[16],       
        zx, 
        nx, 
        zy, 
        ny, 
        f,  
        no; 
    OUT 
        out[16], 
        zr,      
        ng;      

    PARTS:
   
    Mux16(a=x, b[16]=0, sel=zx, out=xnew1);
    Mux16(a=y, b[16]=0, sel=zy, out=ynew1);

   
    Not16(in=xnew1, out=xneg);
    Not16(in=ynew1, out=yneg);
    Mux16(a=xnew1, b=xneg, sel=nx, out=xnew);
    Mux16(a=ynew1, b=yneg, sel=ny, out=ynew);

    And16(a=xnew, b=ynew, out=andxy);
    Add16(a=xnew, b=ynew, out=addxy);
    Mux16(a=andxy, b=addxy, sel=f, out=fxy);

    Not16(in=fxy, out=nfxy);
    Mux16(a=fxy, b=nfxy, sel=no, out=out);

    Or8Way(in=out[0..7], out=zr1);
    Or8Way(in=out[8..15], out=zr2);
    Or(a=zr1, b=zr2, out=zr3);
    Not(in=zr3, out=zr); 

    Or(a=out[15], b=0, out=ng);
}
